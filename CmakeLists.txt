cmake_minimum_required(VERSION 3.11)
cmake_policy(SET CMP0072 NEW)
project(S2_FINAL)

# Set the folder where the executable will be created
set(OUTPUT_BIN_FOLDER ${CMAKE_SOURCE_DIR}/bin)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Librairies

# ---Add GL---
find_package(OpenGL REQUIRED)
include_directories(${OPENGL_INCLUDE_DIR})
set(ALL_LIBRARIES ${OPENGL_LIBRARIES})

# ---Add GLFW---
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)

add_subdirectory(lib/glfw)
set(ALL_LIBRARIES ${ALL_LIBRARIES} glfw)

# ---Add glad---
add_library(glad lib/glad/src/glad.c)
include_directories(lib/glad/include)
set(ALL_LIBRARIES ${ALL_LIBRARIES} glad)

# ---Add glbasimac---
add_subdirectory(lib/glbasimac)
set(ALL_LIBRARIES ${ALL_LIBRARIES} glbasimac)
include_directories(lib/glbasimac/)
set(CMAKE_COLOR_MAKEFILE ON)

add_executable(map src/mains/main_map.cpp src/prog/map.cpp src/prog/key_options.cpp src/prog/pathfinding.cpp)
target_include_directories(map PUBLIC src/headers)
target_link_libraries(map ${ALL_LIBRARIES})
target_compile_features(map PRIVATE cxx_std_20)

add_executable(pathfinding src/mains/main_pathfinding.cpp src/prog/pathfinding.cpp src/prog/map.cpp src/prog/key_options.cpp)
target_include_directories(pathfinding PUBLIC src/headers)
target_link_libraries(pathfinding ${ALL_LIBRARIES})
target_compile_features(pathfinding PRIVATE cxx_std_20)